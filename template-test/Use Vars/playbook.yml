---
- name: Playbook that makes use of global variables created from a previous playbook
  hosts: localhost
  gather_facts: no
  connection: local

  #==================================================================================
  # #settables keyword results in:
  #==================================================================================
  # 1. exposes the variable to UI allowing the user to override the value at run time
  # 2. imports the value from the global variable pool by using jinja syntax i.e.. "{{ var_path }}"
  # 3. all settable variables are passed into the playbook as extra_vars and the usual rules apply edited

  vars:
    new_string: "{{set_vars.var.var_string}}" #settable
    new_number: "{{set_vars.var.var_number}}" #settable
    new_bool: "{{set_vars.var.var_bool}}" #settable
    new_list: "{{set_vars.var.var_list}}" #settable
    new_dict: "{{set_vars.var.var_dict}}" #settable
    ok_hosts: "{{set_vars.successful_hosts}}" #settable
    execution_info: 
      workspace_name: "{{workspace.name}}" #settable
      workflow_name: "{{workflow.name}}" #settable

  tasks:

  # since the new_string variable has been assigned from var_string 
  # it can now be accessed directly
  - name: Display the value of the string variable 'new_string'
    debug:
      msg: "{{ new_string }}"
    
  - name: Display the value of the numeric variable 'new_number'
    debug:
      msg: "{{ new_number }}"

  - name: Display the value of the boolean variable 'new_bool'
    debug:
      msg: "{{ new_bool }}"

  - name: Display the output of the list 'new_list'
    debug:
      msg: "{{ new_list }}"

  # elements within the list are accessible
  - name: Display the value of an element within the list 'new_list[0]'
    debug:
      msg: "{{ new_list[0] }}"

  - name: Display the value of an imported list 'ok_hosts'
    debug:
      msg: "{{ ok_hosts }}"

  - name: Display the values within the dictionary variable 'new_dict'
    debug:
      msg: "{{ new_dict }}"

  # keys within the dictinoary are accessible
  - name: Display the value of a specific key within the variable dictionary 'new_dict.key1'
    debug:
      msg: "{{ new_dict.key1 }}"

  # nested settables are accessible
  - name: Display the values within the vars dictionary variable 'execution_info'
    debug:
      msg: 
        execution_info: "{{ execution_info }}"

...